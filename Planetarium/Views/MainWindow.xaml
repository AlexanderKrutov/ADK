<Window x:Class="Planetarium.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:v="clr-namespace:Planetarium"
        xmlns:vm="clr-namespace:Planetarium.ViewModels"
        xmlns:t="clr-namespace:Planetarium.Types.Themes;assembly=Planetarium.Types"
        mc:Ignorable="d"
        Style="{StaticResource {x:Type Window}}"
        MinHeight="300" MinWidth="300"
        v:MainWindow.FullScreen="{Binding FullScreen, Mode=OneWay}"
        v:MainWindow.MousePosition="{Binding SkyMousePosition, Mode=OneWayToSource}"
        v:MainWindow.MapKeyDown="{Binding MapKeyDownCommand}"
        v:MainWindow.MapDoubleClick="{Binding MapDoubleClickCommand}"
        v:MainWindow.MapRightClick="{Binding MapRightClickCommand}"
        v:MainWindow.MapZoom="{Binding ZoomCommand}"
        Title="Planetarium" Height="450" Width="800">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Height="22">
            <Menu VerticalAlignment="Center">
                <MenuItem Width="Auto" Style="{StaticResource StatusBarMenuItem}" Header="Map">
                    <MenuItem Header="New">
                        <MenuItem Header="File1" />
                        <MenuItem Header="File2" />
                        <MenuItem Header="File3" />
                    </MenuItem>
                    <MenuItem Header="Open"/>
                    <MenuItem Header="Save"/>
                </MenuItem>

                <MenuItem Width="Auto" Style="{StaticResource StatusBarMenuItem}" Header="View">
                </MenuItem>

                <MenuItem Width="Auto" Style="{StaticResource StatusBarMenuItem}" Header="Tools">
                    <MenuItem Header="Search object" Command="{Binding SearchObjectCommand}" />
                    <MenuItem Header="Ephemerides" Command="{Binding GetObjectEphemerisCommand}" />
                    <MenuItem Header="Astronomical phenomena" Command="{Binding CalculatePhenomenaCommand}" />
                </MenuItem>

                <MenuItem Width="Auto" Style="{StaticResource StatusBarMenuItem}" Header="Settings">
                    <MenuItem Header="Date and Time" Command="{Binding SetDateCommand}" />
                    <MenuItem Header="Observer Location" Command="{Binding SelectLocationCommand}" />
                    <Separator Template="{StaticResource MenuSeparatorTemplate}" />
                    <MenuItem Header="Settings" Command="{Binding ChangeSettingsCommand}" />
                </MenuItem>
            </Menu>
        </DockPanel>

        <ToolBar Grid.Row="1" ToolBarTray.IsLocked="True" ItemsSource="{Binding ToolbarItems}" SnapsToDevicePixels="True">

            <ToolBar.Resources>

                <DataTemplate x:Key="ToolbarSeparatorTemplate">
                    <Grid Width="6" Height="18" />
                </DataTemplate>

                <DataTemplate x:Key="ToolbarButtonTemplate">
                    <Button ToolTip="{Binding ButtonName}" Command="{Binding ButtonCommand}" SnapsToDevicePixels="True">
                        <Button.Content>
                            <Rectangle Margin="2" Width="18" Height="18">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="White" />
                                </Rectangle.Fill>
                                <Rectangle.OpacityMask>
                                    <ImageBrush AlignmentX="Left" AlignmentY="Top" ImageSource="{Binding ImageKey, Converter={t:ImageKeyToImageConverter}}"  Stretch="UniformToFill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button.Content>
                    </Button>
                </DataTemplate>

                <DataTemplate x:Key="ToolbarToggleButtonTemplate">
                    <ToggleButton ToolTip="{Binding ButtonName}" IsChecked="{Binding IsChecked}" SnapsToDevicePixels="True">
                        <ToggleButton.Content>
                            <Rectangle Margin="2" Width="18" Height="18">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="White" />
                                </Rectangle.Fill>
                                <Rectangle.OpacityMask>
                                    <ImageBrush  AlignmentX="Left" AlignmentY="Top" ImageSource="{Binding ImageKey, Converter={t:ImageKeyToImageConverter}}"  Stretch="UniformToFill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton.Content>
                    </ToggleButton>
                </DataTemplate>
            </ToolBar.Resources>

            <ToolBar.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type vm:ToolbarSeparatorVM}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarSeparatorTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type vm:ToolbarButtonVM}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarButtonTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type vm:ToolbarToggleButtonVM}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarToggleButtonTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </ToolBar.ItemTemplate>
        </ToolBar>
        
        <DockPanel Grid.Row="2" LastChildFill="true">
            <WindowsFormsHost x:Name="Host" Background="Black">
                <WindowsFormsHost.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}" Opened="ContextMenu_Opened">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                <Setter Property="Header" Value="{Binding Header}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                                <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </WindowsFormsHost.ContextMenu>
            </WindowsFormsHost>
        </DockPanel>
        <StatusBar Grid.Row="3">
            <TextBlock Width="30" TextAlignment="Center" Text="{Binding MapConstellationNameString, FallbackValue='Con'}" />
            <Separator />
            <TextBlock Width="240" Text="{Binding MapEquatorialCoordinatesString, FallbackValue='Equatorial coordinates'}" />
            <Separator />
            <TextBlock Width="240" Text="{Binding MapHorizontalCoordinatesString, FallbackValue='Horizontal coordinates'}" />
            <Separator />
            <TextBlock Width="100" Text="{Binding MapViewAngleString, FallbackValue='Field of view'}"  />
            <Separator />

            <StatusBarItem>
                <Menu Background="Transparent">
                    <MenuItem Style="{StaticResource StatusBarMenuItem}" 
                              Padding="4 0"
                              Visibility="Visible" 
                              ItemsSource="{Binding SelectedObjectsMenuItems}" 
                              Header="{Binding SelectedObjectName, FallbackValue='selected object'}" 
                              ToolTip="Selected Object">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                <Setter Property="Header" Value="{Binding Header}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                                <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </Menu>
            </StatusBarItem>

            <Separator />
            <StatusBarItem HorizontalAlignment="Right">
                <Hyperlink Command="{Binding SetDateCommand}">
                    <TextBlock Width="Auto" TextAlignment="Right" Text="{Binding DateString, FallbackValue='Date'}" />
                </Hyperlink>
            </StatusBarItem>
            
        </StatusBar>
    </Grid>
</Window>
