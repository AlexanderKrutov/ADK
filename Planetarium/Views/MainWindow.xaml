<Window x:Class="Planetarium.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:a="clr-namespace:Planetarium"
        xmlns:t="clr-namespace:Planetarium.Types;assembly=Planetarium.Types"
        xmlns:s="clr-namespace:Planetarium.Types.Themes;assembly=Planetarium.Types"
        xmlns:loc="clr-namespace:Planetarium.Types.Localization;assembly=Planetarium.Types"
        mc:Ignorable="d"
        Style="{StaticResource {x:Type Window}}"
        MinHeight="300" MinWidth="300"
        a:MainWindow.FullScreen="{Binding FullScreen, Mode=OneWay}"
        a:MainWindow.MousePosition="{Binding SkyMousePosition, Mode=OneWayToSource}"
        a:MainWindow.MapKeyDown="{Binding MapKeyDownCommand}"
        a:MainWindow.MapDoubleClick="{Binding MapDoubleClickCommand}"
        a:MainWindow.MapRightClick="{Binding MapRightClickCommand}"
        a:MainWindow.MapZoom="{Binding ZoomCommand}"
        Title="Astrarium" Height="450" Width="800">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Height="22">
            <Menu x:Name="Menu" VerticalAlignment="Center">
                <MenuItem Width="Auto" Header="Map">
                    <MenuItem Header="New">
                        <MenuItem Header="File1" InputGestureText="Ctrl+A"  />
                        <MenuItem Header="File2" />
                        <MenuItem Header="File3" />
                    </MenuItem>
                    <MenuItem Header="Open"/>
                    <MenuItem Header="Save"/>
                </MenuItem>

                <MenuItem Width="Auto" Header="View">
                </MenuItem>

                <MenuItem Width="Auto" Header="Tools">
                    <MenuItem Header="Search object" Command="{Binding SearchObjectCommand}" InputGestureText="Ctrl+A" />
                    <MenuItem Header="Ephemerides" Command="{Binding GetObjectEphemerisCommand}" />
                    <MenuItem Header="Astronomical phenomena" Command="{Binding CalculatePhenomenaCommand}" />
                </MenuItem>

                <MenuItem Width="Auto" Header="{loc:Text Menu.Settings}">
                    <MenuItem Header="Date and Time" Command="{Binding SetDateCommand}" InputGestureText="Ctrl+A" />
                    <MenuItem Header="Observer Location" Command="{Binding SelectLocationCommand}" InputGestureText="Ctrl+B" />
                    <Separator />
                    <MenuItem Header="Settings" Command="{Binding ChangeSettingsCommand}" />
                </MenuItem>
            </Menu>
        </DockPanel>

        <ToolBar Grid.Row="1" ToolBarTray.IsLocked="True" ItemsSource="{Binding ToolbarItems}" SnapsToDevicePixels="True">

            <ToolBar.Resources>

                <DataTemplate x:Key="ToolbarSeparatorTemplate">
                    <Grid Width="6" Height="18" />
                </DataTemplate>

                <DataTemplate x:Key="ToolbarButtonTemplate">
                    <Button ToolTip="{Binding Tooltip}" Command="{Binding ButtonCommand}" SnapsToDevicePixels="True">
                        <Button.Content>
                            <Rectangle Margin="2" Width="18" Height="18">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource ColorForeground}" />
                                </Rectangle.Fill>
                                <Rectangle.OpacityMask>
                                    <ImageBrush AlignmentX="Left" AlignmentY="Top" ImageSource="{Binding ImageKey, Converter={s:ImageKeyToImageConverter}}"  Stretch="UniformToFill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button.Content>
                    </Button>
                </DataTemplate>

                <DataTemplate x:Key="ToolbarToggleButtonTemplate">
                    <ToggleButton ToolTip="{Binding Tooltip}" IsChecked="{Binding IsChecked}" SnapsToDevicePixels="True">
                        <ToggleButton.Content>
                            <Rectangle Margin="2" Width="18" Height="18">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource ColorForeground}" />
                                </Rectangle.Fill>
                                <Rectangle.OpacityMask>
                                    <ImageBrush  AlignmentX="Left" AlignmentY="Top" ImageSource="{Binding ImageKey, Converter={s:ImageKeyToImageConverter}}"  Stretch="UniformToFill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </ToggleButton.Content>
                    </ToggleButton>
                </DataTemplate>
            </ToolBar.Resources>

            <ToolBar.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type t:ToolbarSeparator}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarSeparatorTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type t:ToolbarButton}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarButtonTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Type t:ToolbarToggleButton}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ToolbarToggleButtonTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </DataTemplate>
            </ToolBar.ItemTemplate>
        </ToolBar>
        
        <DockPanel Grid.Row="2" LastChildFill="true">
            <WindowsFormsHost x:Name="Host" Background="Black">
                <WindowsFormsHost.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}" Opened="ContextMenu_Opened">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                <Setter Property="Header" Value="{Binding Header}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                                <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </WindowsFormsHost.ContextMenu>
            </WindowsFormsHost>
        </DockPanel>
        <StatusBar Grid.Row="3">
            <TextBlock Width="30" TextAlignment="Center" Text="{Binding MapConstellationNameString, FallbackValue='Con'}" />
            <Separator />
            <TextBlock Width="240" Text="{Binding MapEquatorialCoordinatesString, FallbackValue='Equatorial coordinates'}" />
            <Separator />
            <TextBlock Width="240" Text="{Binding MapHorizontalCoordinatesString, FallbackValue='Horizontal coordinates'}" />
            <Separator />
            <TextBlock Width="100" Text="{Binding MapViewAngleString, FallbackValue='Field of view'}"  />
            <Separator />

            <StatusBarItem>
                <Menu Background="Transparent">
                    <MenuItem 
                              Visibility="Visible" 
                              ItemsSource="{Binding SelectedObjectsMenuItems}" 
                              Header="{Binding SelectedObjectName, FallbackValue='selected object'}" 
                              ToolTip="Selected Object">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                <Setter Property="Header" Value="{Binding Header}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                                <Setter Property="ItemsSource" Value="{Binding SubItems}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </Menu>
            </StatusBarItem>

            <Separator />

            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <ToggleButton Width="17" Height="17" VerticalContentAlignment="Center" ToolTip="Sync Date and Time"
                        IsChecked="{Binding DateTimeSync}" Margin="0 0 4 0">
                        <Image Stretch="UniformToFill" Height="15">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup ClipGeometry="M0,0 V125 H100 V0 H0 Z">
                                            <DrawingGroup Opacity="1">
                                                <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="F1 M100,125z M0,0z M76.5,41.64L24,41.64C19.39,41.64,15.65,45.39,15.66,50L15.66,86.65C15.66,91.26,19.41,95,24.02,95L76,94.97C80.61,94.97,84.35,91.23,84.34,86.62L84.34,49.96C84.34,45.53,80.87,41.91,76.5,41.64z" />
                                                <GeometryDrawing Brush="{StaticResource BrushForeground}" Geometry="F1 M100,125z M0,0z M31.397,37.907C33.189,37.907,34.642,36.453,34.641,34.661L34.636,29.328C34.632,20.861 41.518,13.968 49.985,13.964 58.452,13.96 65.345,20.846 65.349,29.313L65.354,34.667C65.356,36.457,66.807,37.908,68.598,37.908L71.074,37.908C72.867,37.908,74.319,36.454,74.318,34.662L74.313,29.308C74.304,15.897 63.389,4.993 49.979,5 36.569,5.007 25.665,15.921 25.672,29.332L25.677,34.667C25.679,36.457,27.13,37.908,28.921,37.908L31.397,37.908z" />
                                            </DrawingGroup>
                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </ToggleButton>
                    <TextBlock>
                        <Hyperlink Command="{Binding SetDateCommand}"> 
                            <TextBlock Width="Auto" TextAlignment="Right" Text="{Binding DateString, FallbackValue='Date'}" />
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
